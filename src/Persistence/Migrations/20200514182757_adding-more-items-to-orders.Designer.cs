// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(ApplicationContextSqlServer))]
    [Migration("20200514182757_adding-more-items-to-orders")]
    partial class addingmoreitemstoorders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "dorothy@domain.com",
                            Name = "Dorothy"
                        },
                        new
                        {
                            Id = 2,
                            Email = "annmarie@domain.com",
                            Name = "Annmarie"
                        },
                        new
                        {
                            Id = 3,
                            Email = "ashley@domain.com",
                            Name = "Ashley"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 5, 14, 13, 52, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            Description = "Mother's Day buying"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 3, 11, 16, 45, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            Description = "Home office tools"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2019, 11, 11, 10, 1, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            Description = "Desktop upgrade"
                        });
                });

            modelBuilder.Entity("Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 2,
                            OrderId = 1,
                            Price = 2235.3000000000002,
                            Sku = "SKU23654"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 5,
                            OrderId = 1,
                            Price = 127.33,
                            Sku = "SKU235884"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 7,
                            OrderId = 2,
                            Price = 17.390000000000001,
                            Sku = "SKU235884-66"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 2,
                            OrderId = 3,
                            Price = 119.39,
                            Sku = "SKU5884-5"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.HasOne("Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("Domain.Entities.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
